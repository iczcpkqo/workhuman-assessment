{"ast":null,"code":"var _jsxFileName = \"C:\\\\codedomain\\\\workspace\\\\Assessment\\\\work-human\\\\workhuman-assessment\\\\frontend\\\\src\\\\component\\\\CountryBox.js\";\nimport { Card, Col, FloatingLabel, Form, ListGroup, Row } from \"react-bootstrap\";\nimport CountryInput from \"./CountryInput\";\nimport CountryList from \"./CountryList\";\nimport ajax from \"../api/ajax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryBox() {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 5,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-3 shadow-sm navbar-nav-scroll\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(CountryInput, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(CountryList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = CountryBox;\nfunction loadCountries() {\n  return {};\n}\n\n// async function loadCountries(extend, listType, operation, path, id) {\n//     console.log(\"-- get node list --- \");\n//\n//     let nodes = []\n//     await ajax(\"executeQuery\",{queryID: \"allchildren\", subject: this.state.id}).then(e=>{\n//         console.log(\"-- node list ajax body --\");\n//         for (let i in e.data){\n//             console.log(\"--== node list ajax body node: \" + i);\n//             nodes.push( <Nodelist\n//                 extend={extend}\n//                 listType={listType}\n//                 operation={operation}\n//                 path={path}\n//                 // onPathClick={this.state.listType === \"window\" ? (o) => this.onPathClick(o) : \"\"}\n//                 onPathClick={(o)=>this.state.onPathClick(o) || \"\"}\n//\n//                 id={e.data[i][\"object\"]}\n//                 predicate={e.data[i][\"predicate\"].split(\"#\")[1]}\n//                 type={e.data[i][\"obj_type\"].split(\"#\")[1]}\n//                 txt={e.data[i][\"obj_name\"]}/>);}});\n//\n//     nodes.length > this.state.maxShowChildren && ( nodes[this.state.maxShowChildren]=[\n//         <Supernode amount={nodes.length - this.state.maxShowChildren}>\n//             {nodes.splice(this.state.maxShowChildren, nodes.length - this.state.maxShowChildren)}\n//         </Supernode>\n//     ]);\n//\n//     this.setState({ list: nodes});\n// }\n\nexport default CountryBox;\n\n// •\tAlbania\n// •\tAndorra\n// •\tAustralia\n// •\tBrazil\n// •\tBelgium\n// •\tCanada\n// •\tChina\n// •\tFrance\n// •\tGermany\n// •\tIndia\n// •\tIndonesia\n// •\tIreland\n// •\tItaly\n// •\tJapan\n// •\tKenya\n// •\tLuxembourg\n// •\tMexico\n// •\tNew Zealand\n// •\tNigeria\n// •\tPortugal\n// •\tRussia\n// •\tSouth Africa\n// •\tSouth Korea\n// •\tSpain\n// •\tSweden\n// •\tThailand\n// •\tUkraine\n// •\tUnited Kingdom\n// •\tUnited States of America\n// •\tVietnam\n// •\tZambia\n//\nvar _c;\n$RefreshReg$(_c, \"CountryBox\");","map":{"version":3,"names":["Card","Col","FloatingLabel","Form","ListGroup","Row","CountryInput","CountryList","ajax","jsxDEV","_jsxDEV","CountryBox","className","children","xs","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadCountries","$RefreshReg$"],"sources":["C:/codedomain/workspace/Assessment/work-human/workhuman-assessment/frontend/src/component/CountryBox.js"],"sourcesContent":["import {Card, Col, FloatingLabel, Form, ListGroup, Row} from \"react-bootstrap\";\r\nimport CountryInput from \"./CountryInput\";\r\nimport CountryList from \"./CountryList\";\r\nimport ajax from \"../api/ajax\";\r\nfunction CountryBox() {\r\n    return (\r\n        <Row className=\"justify-content-center\">\r\n            <Col xs={5}>\r\n                <Card className=\"p-3 shadow-sm navbar-nav-scroll\">\r\n                    <Row>\r\n                        <Col>\r\n                            <CountryInput/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <CountryList/>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction loadCountries() {\r\n    return {\r\n\r\n\r\n    };\r\n}\r\n\r\n\r\n// async function loadCountries(extend, listType, operation, path, id) {\r\n//     console.log(\"-- get node list --- \");\r\n//\r\n//     let nodes = []\r\n//     await ajax(\"executeQuery\",{queryID: \"allchildren\", subject: this.state.id}).then(e=>{\r\n//         console.log(\"-- node list ajax body --\");\r\n//         for (let i in e.data){\r\n//             console.log(\"--== node list ajax body node: \" + i);\r\n//             nodes.push( <Nodelist\r\n//                 extend={extend}\r\n//                 listType={listType}\r\n//                 operation={operation}\r\n//                 path={path}\r\n//                 // onPathClick={this.state.listType === \"window\" ? (o) => this.onPathClick(o) : \"\"}\r\n//                 onPathClick={(o)=>this.state.onPathClick(o) || \"\"}\r\n//\r\n//                 id={e.data[i][\"object\"]}\r\n//                 predicate={e.data[i][\"predicate\"].split(\"#\")[1]}\r\n//                 type={e.data[i][\"obj_type\"].split(\"#\")[1]}\r\n//                 txt={e.data[i][\"obj_name\"]}/>);}});\r\n//\r\n//     nodes.length > this.state.maxShowChildren && ( nodes[this.state.maxShowChildren]=[\r\n//         <Supernode amount={nodes.length - this.state.maxShowChildren}>\r\n//             {nodes.splice(this.state.maxShowChildren, nodes.length - this.state.maxShowChildren)}\r\n//         </Supernode>\r\n//     ]);\r\n//\r\n//     this.setState({ list: nodes});\r\n// }\r\n\r\nexport default CountryBox;\r\n\r\n\r\n\r\n\r\n// •\tAlbania\r\n// •\tAndorra\r\n// •\tAustralia\r\n// •\tBrazil\r\n// •\tBelgium\r\n// •\tCanada\r\n// •\tChina\r\n// •\tFrance\r\n// •\tGermany\r\n// •\tIndia\r\n// •\tIndonesia\r\n// •\tIreland\r\n// •\tItaly\r\n// •\tJapan\r\n// •\tKenya\r\n// •\tLuxembourg\r\n// •\tMexico\r\n// •\tNew Zealand\r\n// •\tNigeria\r\n// •\tPortugal\r\n// •\tRussia\r\n// •\tSouth Africa\r\n// •\tSouth Korea\r\n// •\tSpain\r\n// •\tSweden\r\n// •\tThailand\r\n// •\tUkraine\r\n// •\tUnited Kingdom\r\n// •\tUnited States of America\r\n// •\tVietnam\r\n// •\tZambia\r\n//\r\n"],"mappings":";AAAA,SAAQA,IAAI,EAAEC,GAAG,EAAEC,aAAa,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,QAAO,iBAAiB;AAC9E,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,SAASC,UAAUA,CAAA,EAAG;EAClB,oBACID,OAAA,CAACL,GAAG;IAACO,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACnCH,OAAA,CAACT,GAAG;MAACa,EAAE,EAAE,CAAE;MAAAD,QAAA,eACPH,OAAA,CAACV,IAAI;QAACY,SAAS,EAAC,iCAAiC;QAAAC,QAAA,gBAC7CH,OAAA,CAACL,GAAG;UAAAQ,QAAA,eACAH,OAAA,CAACT,GAAG;YAAAY,QAAA,eACAH,OAAA,CAACJ,YAAY;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNR,OAAA,CAACL,GAAG;UAAAQ,QAAA,eACAH,OAAA,CAACT,GAAG;YAAAY,QAAA,eACAH,OAAA,CAACH,WAAW;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACC,EAAA,GAnBQR,UAAU;AAwBnB,SAASS,aAAaA,CAAA,EAAG;EACrB,OAAO,CAGP,CAAC;AACL;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeT,UAAU;;AAKzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAQ,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}