{"ast":null,"code":"var _jsxFileName = \"C:\\\\codedomain\\\\workspace\\\\Assessment\\\\work-human\\\\workhuman-assessment\\\\frontend\\\\src\\\\component\\\\InitData.js\",\n  _s = $RefreshSig$();\nimport { Button, Card, Col, Container, FloatingLabel, Form, ListGroup, Row } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport CountryInput from \"./CountryInput\";\nimport CountryList from \"./CountryList\";\nimport ajax from \"../api/ajax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryBox() {\n  _s();\n  const [dataWholeCountries, setDataWholeCountries] = useState(T_dataCountries);\n  function onInsert() {\n    // console.log(dataWholeCountries);\n    dataWholeCountries.forEach(country => {\n      insertCountry(country.name);\n    });\n  }\n  async function insertCountry(country) {\n    console.log(\"Insert New Whole Countries\");\n    await ajax(\"api/countries/insert\", {\n      name: \"nnn\"\n    }, 'POST').then(e => {\n      console.log(\"-- node list ajax body --\");\n      console.log(e.data);\n    });\n    // return T_dataCountries;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        xs: 5,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"p-3 shadow-sm navbar-nav-scroll\",\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    children: \"Danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 41\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: onInsert,\n                    children: \"Insert\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 41\n                  }, this), ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    value: (() => {\n                      return dataWholeCountries.map(o => {\n                        return o.name;\n                      }).join('\\n');\n                    })(),\n                    onChange: e => {\n                      // console.log(e.target.value.split(/\\r?\\n/));\n                      setDataWholeCountries(e.target.value.split(/\\r?\\n/).map(item => {\n                        return {\n                          name: item\n                        };\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(CountryBox, \"t7HkKxciZlBEII6AecCAbRsA+gU=\");\n_c = CountryBox;\nasync function loadCountries(iniData) {\n  console.log(\"ini Data ====== \");\n  await ajax(\"api/testing/select\", {}).then(e => {\n    console.log(\"-- node list ajax body --\");\n    console.log(e.data);\n    iniData(e.data);\n  });\n  // return T_dataCountries;\n}\n\nexport default CountryBox;\nconst T_dataCountries = [{\n  id: 1,\n  name: 'Albania'\n}, {\n  id: 2,\n  name: 'Andorra'\n}, {\n  id: 3,\n  name: 'Australia'\n}, {\n  id: 4,\n  name: 'Brazil'\n}, {\n  id: 5,\n  name: 'Belgium'\n}, {\n  id: 6,\n  name: 'Canada'\n}, {\n  id: 7,\n  name: 'China'\n}, {\n  id: 8,\n  name: 'France'\n}, {\n  id: 9,\n  name: 'Germany'\n}, {\n  id: 10,\n  name: 'India'\n}, {\n  id: 11,\n  name: 'Indonesia'\n}, {\n  id: 12,\n  name: 'Ireland'\n}, {\n  id: 13,\n  name: 'Italy'\n}, {\n  id: 14,\n  name: 'Japan'\n}, {\n  id: 15,\n  name: 'Kenya'\n}, {\n  id: 16,\n  name: 'Luxembourg'\n}, {\n  id: 17,\n  name: 'Mexico'\n}, {\n  id: 18,\n  name: 'New Zealand'\n}, {\n  id: 19,\n  name: 'Nigeria'\n}, {\n  id: 20,\n  name: 'Portugal'\n}, {\n  id: 21,\n  name: 'Russia'\n}, {\n  id: 22,\n  name: 'South Africa'\n}, {\n  id: 23,\n  name: 'South Korea'\n}, {\n  id: 24,\n  name: 'Spain'\n}, {\n  id: 25,\n  name: 'Sweden'\n}, {\n  id: 26,\n  name: 'Thailand'\n}, {\n  id: 27,\n  name: 'Ukraine'\n}, {\n  id: 28,\n  name: 'United Kingdom'\n}, {\n  id: 29,\n  name: 'United States of America'\n}, {\n  id: 30,\n  name: 'Vietnam'\n}, {\n  id: 31,\n  name: 'Zambia'\n}];\nvar _c;\n$RefreshReg$(_c, \"CountryBox\");","map":{"version":3,"names":["Button","Card","Col","Container","FloatingLabel","Form","ListGroup","Row","useState","CountryInput","CountryList","ajax","jsxDEV","_jsxDEV","CountryBox","_s","dataWholeCountries","setDataWholeCountries","T_dataCountries","onInsert","forEach","country","insertCountry","name","console","log","then","e","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","variant","onClick","Control","as","rows","value","map","o","join","onChange","target","split","item","_c","loadCountries","iniData","id","$RefreshReg$"],"sources":["C:/codedomain/workspace/Assessment/work-human/workhuman-assessment/frontend/src/component/InitData.js"],"sourcesContent":["import {Button, Card, Col, Container, FloatingLabel, Form, ListGroup, Row} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport CountryInput from \"./CountryInput\";\r\nimport CountryList from \"./CountryList\";\r\nimport ajax from \"../api/ajax\";\r\n\r\nfunction CountryBox() {\r\n\r\n    const [dataWholeCountries, setDataWholeCountries] = useState(T_dataCountries);\r\n\r\n    function onInsert() {\r\n        // console.log(dataWholeCountries);\r\n        dataWholeCountries.forEach((country) => {\r\n            insertCountry(country.name);\r\n        });\r\n    }\r\n\r\n    async function insertCountry(country) {\r\n        console.log(\"Insert New Whole Countries\");\r\n        await ajax(\"api/countries/insert\", {name: \"nnn\"}, 'POST').then(e => {\r\n            console.log(\"-- node list ajax body --\");\r\n            console.log(e.data);\r\n        });\r\n        // return T_dataCountries;\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n            </header>\r\n            <main>\r\n                <Container xs={5}>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs={5}>\r\n                            <Card className=\"p-3 shadow-sm navbar-nav-scroll\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button variant=\"danger\">Danger</Button>{' '}\r\n                                        <Button variant=\"primary\"\r\n                                                onClick={onInsert}\r\n                                        >Insert</Button>{' '}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Control as=\"textarea\" rows={3}\r\n                                                      value={(()=>{\r\n                                                          return dataWholeCountries.map((o)=>{\r\n                                                              return o.name;\r\n                                                          }).join('\\n');\r\n                                                      })()}\r\n                                                      onChange={(e) => {\r\n                                                          // console.log(e.target.value.split(/\\r?\\n/));\r\n                                                          setDataWholeCountries(\r\n                                                              e.target.value.split(/\\r?\\n/).map((item) => {\r\n                                                                  return {name: item}\r\n                                                              }));\r\n                                                      }}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nasync function loadCountries(iniData) {\r\n    console.log(\"ini Data ====== \");\r\n    await ajax(\"api/testing/select\", {}).then(e => {\r\n        console.log(\"-- node list ajax body --\");\r\n        console.log(e.data);\r\n        iniData(e.data);\r\n    });\r\n    // return T_dataCountries;\r\n}\r\n\r\nexport default CountryBox;\r\n\r\nconst T_dataCountries = [{id: 1, name: 'Albania'},\r\n    {id: 2, name: 'Andorra'},\r\n    {id: 3, name: 'Australia'},\r\n    {id: 4, name: 'Brazil'},\r\n    {id: 5, name: 'Belgium'},\r\n    {id: 6, name: 'Canada'},\r\n    {id: 7, name: 'China'},\r\n    {id: 8, name: 'France'},\r\n    {id: 9, name: 'Germany'},\r\n    {id: 10, name: 'India'},\r\n    {id: 11, name: 'Indonesia'},\r\n    {id: 12, name: 'Ireland'},\r\n    {id: 13, name: 'Italy'},\r\n    {id: 14, name: 'Japan'},\r\n    {id: 15, name: 'Kenya'},\r\n    {id: 16, name: 'Luxembourg'},\r\n    {id: 17, name: 'Mexico'},\r\n    {id: 18, name: 'New Zealand'},\r\n    {id: 19, name: 'Nigeria'},\r\n    {id: 20, name: 'Portugal'},\r\n    {id: 21, name: 'Russia'},\r\n    {id: 22, name: 'South Africa'},\r\n    {id: 23, name: 'South Korea'},\r\n    {id: 24, name: 'Spain'},\r\n    {id: 25, name: 'Sweden'},\r\n    {id: 26, name: 'Thailand'},\r\n    {id: 27, name: 'Ukraine'},\r\n    {id: 28, name: 'United Kingdom'},\r\n    {id: 29, name: 'United States of America'},\r\n    {id: 30, name: 'Vietnam'},\r\n    {id: 31, name: 'Zambia'}];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}